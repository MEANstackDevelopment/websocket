{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { io } from 'socket.io-client';\r\n\r\n// Custom namespace\r\nvar socket = io('http://localhost:5000'); // pass the URL of your server for different domain and for same domain leave it empty io() , io(\"/admin\") same origin version, io(\"https://server-domain.com/admin\")  cross origin version\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeApp();\r\n  }\r\n\r\n  sendMessage() {\r\n    socket.emit('join', 'Hello World from client');\r\n  }\r\n\r\n  receiveMessage() {\r\n    socket.on('messages', function (data) {\r\n      console.log(data, 'data');\r\n    });\r\n\r\n    // you shouldnâ€™t register event handlers in the connect handler itself\r\n    // event handler\r\n    socket.on(\"data\", () => { /* ... */ });\r\n  }\r\n\r\n  // new user is created so we generate nickname and emit event\r\n  initializeApp() {\r\n\r\n    const inboxPeople = document.querySelector(\".inbox__people\");\r\n\r\n    let userName = \"\";\r\n\r\n    const newUserConnected = (user?) => {\r\n      userName = user || `User${Math.floor(Math.random() * 1000000)}`;\r\n      socket.emit(\"new user\", userName);\r\n      addToUsersBox(userName);\r\n    };\r\n\r\n    const addToUsersBox = (userName) => {\r\n      if (!!document.querySelector(`.${userName}-userlist`)) {\r\n        return;\r\n      }\r\n\r\n      const userBox = `\r\n    <div class=\"chat_ib ${userName}-userlist\">\r\n      <h5>${userName}</h5>\r\n    </div>\r\n  `;\r\n      inboxPeople.innerHTML += userBox;\r\n    };\r\n\r\n\r\n    newUserConnected();\r\n\r\n    socket.on(\"new user\", function (data) {\r\n      data.map((user) => addToUsersBox(user));\r\n    });\r\n\r\n    socket.on(\"user disconnected\", function (userName) {\r\n      document.querySelector(`.${userName}-userlist`).remove();\r\n    });\r\n\r\n    const inputField = <HTMLInputElement>(document.querySelector(\".message_form__input\"));\r\n    const messageForm = document.querySelector(\".message_form\");\r\n    const messageBox = document.querySelector(\".messages__history\");\r\n    const fallback = document.querySelector(\".fallback\");\r\n    const addNewMessage = ({ user, message }) => {\r\n      const time = new Date();\r\n      const formattedTime = time.toLocaleString(\"en-US\", { hour: \"numeric\", minute: \"numeric\" });\r\n\r\n      const receivedMsg = `\r\n  <div class=\"incoming__message\">\r\n    <div class=\"received__message\">\r\n      <p>${message}</p>\r\n      <div class=\"message__info\">\r\n        <span class=\"message__author\">${user}</span>\r\n        <span class=\"time_date\">${formattedTime}</span>\r\n      </div>\r\n    </div>\r\n  </div>`;\r\n\r\n      const myMsg = `\r\n  <div class=\"outgoing__message\">\r\n    <div class=\"sent__message\">\r\n      <p>${message}</p>\r\n      <div class=\"message__info\">\r\n        <span class=\"time_date\">${formattedTime}</span>\r\n      </div>\r\n    </div>\r\n  </div>`;\r\n\r\n      messageBox.innerHTML += user === userName ? myMsg : receivedMsg;\r\n    };\r\n\r\n    messageForm.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n      if (!inputField.value) {\r\n        return;\r\n      }\r\n\r\n      socket.emit(\"chat message\", {\r\n        message: inputField.value,\r\n        nick: userName,\r\n      });\r\n\r\n      inputField.value = \"\";\r\n    });\r\n\r\n    socket.on(\"chat message\", function (data) {\r\n      addNewMessage({ user: data.nick, message: data.message });\r\n    });\r\n\r\n    socket.on(\"typing\", function (data) {\r\n      const { isTyping, nick } = data;\r\n\r\n      if (!isTyping) {\r\n        fallback.innerHTML = \"\";\r\n        return;\r\n      }\r\n\r\n      fallback.innerHTML = `<p>${nick} is typing...</p>`;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"inbox\">\r\n    <div class=\"inbox__people\">\r\n      <h4>Active users</h4>\r\n    </div>\r\n    <div class=\"inbox__messages\">\r\n      <div class=\"messages__history\"></div>\r\n      <div class=\"fallback\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form class=\"message_form\">\r\n    <input type=\"text\" class=\"message_form__input\" placeholder=\"Type a message\" />\r\n    <button class=\"message_form__button\" type=\"submit\">\r\n      Enter\r\n    </button>\r\n  </form>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'demo';\r\n}\r\n","<app-chat></app-chat>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}